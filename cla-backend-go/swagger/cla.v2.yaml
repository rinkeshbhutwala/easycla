# Copyright The Linux Foundation and each contributor to CommunityBridge.
# SPDX-License-Identifier: MIT
swagger: '2.0'
info:
  title: EasyCLA v2 API
  version: '2.0'
  x-logo:
    url: "https://www.linuxfoundation.org/wp-content/uploads/2017/06/LF_logo_NEW_H_W.png"
    backgroundColor: "#FFFFFF"
    altText: "The Linux Foundation - EasyCLA API"
basePath: /v4
securityDefinitions:
  lf-auth:
    type: apiKey
    name: X-ACL
    in: header
    description: Requires X-ACL headers and bearer token
security:
  - lf-auth: []

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /ops/version:
    get:
      summary: API Version Information
      description: Returns the API version of the product
      security: []
      operationId: getVersion
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/version'
      tags:
        - version

  /ops/health:
    get:
      summary: API Health Check
      description: Returns the API health status
      security: []
      operationId: healthCheck
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/health'
        '503':
          description: 'Service unavailable'
          schema:
            $ref: '#/definitions/health'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - health

  /api-docs:
    get:
      security: []
      summary: API documentation
      description: Endpoint to render the API documentation
      operationId: getDoc
      produces:
        - text/html
      responses:
        '200':
          description: Success
      tags:
        - docs

  /swagger.json:
    get:
      security: []
      summary: Swagger API as JSON
      description: Returns the Swagger specification as a JSON document
      operationId: getSwagger
      produces:
        - application/json
      responses:
        '200':
          description: Success
      tags:
        - docs

  /metrics/cla-manager-distribution:
    get:
      summary: Get CLA manager distribution for EasyCLA
      description: Returns CLA manager distribution
      operationId: getClaManagerDistribution
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-manager-distribution'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/total-count:
    get:
      summary: Get total count metrics
      description: Returns total count metrics
      operationId: getTotalCount
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/total-count-metrics'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/company/{companyID}:
    get:
      summary: Get metrics of company
      description: Returns company metrics
      operationId: getCompanyMetric
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: companyID
          description: the company ID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-metric'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/top-companies:
    get:
      summary: company metrics of top companies
      description: Returns list company metrics of top companies
      operationId: getTopCompanies
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/top-companies'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/top-projects:
    get:
      summary: project metrics of top projects
      description: Returns list project metrics of top projects
      operationId: getTopProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/top-projects'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/project/{projectID}:
    get:
      summary: Get metrics of project
      description: Returns project metrics
      operationId: getProjectMetric
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectID
          description: the project ID
          in: path
          type: string
          required: true
        - name: idType
          description: ID type
          in: query
          type: string
          enum:
            - salesforce
            - internal
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/sf-project-metric'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - metrics

  /metrics/project:
    get:
      summary: list metrics of project
      description: Returns list of project metrics
      operationId: listProjectMetrics
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/list-project-metric'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/company/{companySFID}/project/{projectSFID}:
    get:
      summary: list project metrics of company
      description: Returns list of project metrics for company
      operationId: listCompanyProjectMetrics
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-project-metrics'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - metrics

  # Cla group Service
  /cla-group:
    post:
      summary: Create an EasyCLA CLA Group
      description: Creates a new CLA Group within the EasyCLA system.
      operationId: createClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: claGroupInput
          in: body
          schema:
            $ref: '#/definitions/create-cla-group-input'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-group'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '422':
          $ref: '#/responses/unprocessable-entity'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /cla-group/{claGroupID}:
    delete:
      summary: Delete an EasyCLA CLA Group
      description: Delete CLA Group within the EasyCLA system.
      operationId: deleteClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /cla-group/{claGroupID}/enroll-projects:
    put:
      summary: Enroll projects in an EasyCLA CLA Group
      description: Enroll projects in  CLA Group
      operationId: enrollProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - name: projectSFIDList
          in: body
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /cla-group/{claGroupID}/unenroll-projects:
    put:
      summary: Unenroll projects in an EasyCLA CLA Group
      description: Unenroll projects in  CLA Group
      operationId: unenrollProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - name: projectSFIDList
          in: body
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /foundation/{projectSFID}/cla-groups:
    get:
      summary: List CLA Groups associated with a foundation or project
      description: Return list of CLA Groups associated with a group of projects (formerly a foundation) or project
      operationId: listClaGroupsUnderFoundation
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-group-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /foundation-mapping:
    get:
      summary: return cla groups under all foundation
      description: Return list of all cla groups under foundation
      operationId: listFoundationClaGroups
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/foundationSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/foundation-mapping-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - foundation

  /cla-group/validate:
    post:
      summary: Validates the CLA Group
      description: Validates the CLA Group provided input parameters
      operationId: validateClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: validationInputRequest
          in: body
          schema:
            $ref: '#/definitions/cla-group-validation-request'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-group-validation-response'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /project:
    put:
      summary: Update Project by ID
      description: Endpoint to update the project details
      operationId: updateProject
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: body
          in: body
          schema:
            $ref: '#/definitions/project'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/project'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project
    get:
      summary: Get Projects
      description: Endpoint to fetch the project list
      operationId: getProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/searchField'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/fullMatch'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/projects'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /project/{projectSfdcId}:
    parameters:
      - name: projectSfdcId
        in: path
        type: string
        required: true
    get:
      summary: Get Project by ID
      description: Endpoint to fetch the project by ID
      operationId: getProjectById
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/project'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project
    delete:
      summary: Delete Project by ID
      description: Endpoint to delete the project by ID
      operationId: deleteProjectById
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - project

  /project/enabled/{foundationSFID}:
    get:
      summary: Get CLA enabled projects
      description: Returns a list of CLA enabled projects for a given foundation
      operationId: getCLAProjectsByID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-foundationSFID"
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/enabled-cla-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /project/external/{externalID}:
    get:
      summary: Get CLA Groups By SFDC ID
      description: Returns a list of CLA groups associated with the specified SFID ID
      operationId: getProjectsByExternalID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: externalID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/projects'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /project/name/{projectName}:
    get:
      summary: Get Project By Name
      description: Returns the project object when provided the project name - exact match
      operationId: getProjectByName
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectName
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/project'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /events/recent:
    get:
      summary: List recent events - requires Admin-level access
      description: Returns list of recent events
      operationId: getRecentEvents
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/foundation/{foundationSFID}/csv:
    get:
      summary: Download all the events for the foundation as a CSV document
      description: Download all the events for the foundation as a CSV document
      operationId: getFoundationEventsAsCSV
      parameters:
        - $ref: "#/parameters/path-foundationSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      produces:
        - text/csv
      responses:
        '200':
          description: 'The events for the SFDC foundation as a CSV document'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/foundation/{foundationSFID}:
    get:
      summary: get the events for the foundation
      description: get all the events for the foundation
      operationId: getFoundationEvents
      parameters:
        - $ref: "#/parameters/path-foundationSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/returnAllEvents'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/project/{projectSFID}:
    get:
      summary: get the events for the project
      description: get all the events for the project
      operationId: getProjectEvents
      parameters:
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/returnAllEvents'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/project/{projectSFID}/csv:
    get:
      summary: Download all the events for the project as a CSV document
      description: Download all the events for the project as a CSV document
      operationId: getProjectEventsAsCSV
      parameters:
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      produces:
        - text/csv
      responses:
        '200':
          description: 'The events for the SFDC project as a CSV document'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /company/{companySFID}/project/{projectSFID}/events:
    get:
      summary: return recent events of company and project
      description: Returns list of events of company and project
      operationId: getCompanyProjectEvents
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/path-projectSFID'
        - $ref: '#/parameters/path-companySFID'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/returnAllEvents'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /template:
    get:
      summary: Get Available Templates
      description: Endpoint to return the list of available templates
      operationId: getTemplates
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/template'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template

  /clagroup/{claGroupID}/template:
    post:
      summary: Create contract template for CLA Group
      description: Endpoint to create the template for the CLA Group
      operationId: createCLAGroupTemplate
      parameters:
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - in: body
          name: body
          schema:
            $ref: '#/definitions/create-cla-group-template'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/template-pdfs'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template


  /template/preview:
    post:
      summary: Create contract template for CLA Group
      description: Endpoint to create the template preview for the CLA Group
      operationId: templatePreview
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - in: query
          type: string
          name: template_for
          required: true
          enum:
            - icla
            - ccla
        - in: body
          name: templatePreviewInput
          schema:
            $ref: '#/definitions/create-cla-group-template'
          required: true
      produces:
        - application/pdf
      responses:
        '200':
          description: 'A PDF file'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template

  /template/{claGroupID}/preview:
    get:
      summary: Preview Template PDF
      description: Get Template PDF for given CLA Group identifier with specified CLA type
      operationId: getCLATemplatePreview
      security: []
      parameters:
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/templateCLAType"
        - in: query
          type: boolean
          name: watermark
          required: false
          default: false
      produces:
        - application/pdf
      responses:
        '200':
          description: 'A PDF File'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template


  /project/{projectSFID}/github/organizations:
    post:
      summary: API to add new GitHub Oranization in the project
      description: Endpoint to create the template preview for the CLA Group
      operationId: addProjectGithubOrganization
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/create-github-organization'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/github-organization'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-organizations
    get:
      summary: API to fetch the GitHub oranizations of the project
      description: Endpoint to return the list of GitHub organization for the project
      operationId: getProjectGithubOrganizations
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/project-github-organizations'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-organizations

  /project/{projectSFID}/github/organizations/{orgName}/config:
    put:
      summary: Update GitHub Organization Configuration
      description: Endpoint to adjust the GitHub Organization Configuration, such as toggling the auto-enable flag
      operationId: updateProjectGithubOrganizationConfig
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: orgName
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/update-github-organization'
          required: true
      responses:
        '200':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - github-organizations

  /project/{projectSFID}/github/organizations/{orgName}:
    delete:
      summary: API to delete GitHub oranization in the project
      description: Endpoint to delete the GitHub organization for the project
      operationId: deleteProjectGithubOrganization
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: orgName
          in: path
          type: string
          required: true
      responses:
        '204':
          description: 'Updated Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - github-organizations

  /project/{projectSFID}/github/repositories:
    post:
      summary: API to add the GitHub repository
      description: Endpoint to add a GitHub repository for the project
      operationId: addProjectGithubRepository
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - in: body
          name: github-repository-input
          schema:
            $ref: '#/definitions/github-repository-input'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/github-repository'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-repositories
    get:
      summary: API to fetch the gitHub repositories of the project
      description: Endpoint to fetch the list of GitHub repositories for the project
      operationId: getProjectGithubRepositories
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/list-github-repositories'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-repositories

  /project/{projectSFID}/github/repositories/{repositoryID}:
    delete:
      summary: API to remove the GitHub repository from the project
      description: Endpoint to remove a GitHub repository from a project
      operationId: deleteProjectGithubRepository
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: repositoryID
          in: path
          type: string
          required: true
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - github-repositories

  /cla-group/{claGroupID}/icla/signatures:
    get:
      summary: List icla signatures for cla group
      description: Return list of icla signatures for cla group
      operationId: listClaGroupIclaSignature
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: '#/parameters/searchTerm'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/icla-signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /cla-group/{claGroupID}/corporate-contributors:
    get:
      summary: List corporate contributors for cla group
      description: Return list of corporate contributor for cla group
      operationId: listClaGroupCorporateContributors
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/companySFID"
        - $ref: '#/parameters/searchTerm'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/corporate-contributor-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/id/{signatureID}:
    get:
      summary: Get the signature by ID
      description: Returns the signature when provided the signature ID
      operationId: getSignature
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          description: the signature ID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signature'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/{signatureID}/signed-document:
    get:
      summary: Get signed document for the signature
      description: Returns the signature signed document when provided the signature ID
      operationId: getSignatureSignedDocument
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          description: the signature ID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signed_document'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}:
    get:
      summary: Get project signatures
      description: Returns a list of project signature models when provided the project ID
      operationId: getProjectSignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/searchField'
        - $ref: '#/parameters/fullMatch'
        - $ref: '#/parameters/signatureType'
        - $ref: '#/parameters/claType'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  # --------------------------------------------------------
  # Individual CLA Endpoints - PDF, CSV, Zip Download
  # --------------------------------------------------------
  /signatures/project/{claGroupID}/icla/pdfs:
    get:
      summary: Downloads all ICLAs for this project
      description: Downloads the ICLAs for this project
      operationId: downloadProjectSignatureICLAs
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - application/json
      responses:
        '200':
          description: 'The CLA Group ICLAs as a zip'
          schema:
            $ref: '#/definitions/url-object'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/icla/csv:
    get:
      summary: Downloads all ICLA information as a CSV document for this project
      description: Downloads the ICLA information as a CSV document for this project
      operationId: downloadProjectSignatureICLAAsCSV
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - text/json
        - text/csv
      responses:
        '200':
          description: 'The CLA Group ICLAs as a CSV file'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/icla/{signatureID}/pdf:
    get:
      summary: Downloads the user's ICLA for this project
      description: Downloads the user's ICLA for this project
      operationId: downloadProjectSignatureICLA
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-signatureID"
      produces:
        - application/pdf
      responses:
        '200':
          description: "The user's ICLA as a PDF document"
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  # --------------------------------------------------------
  # Corporate CLA Endpoints - PDF, CSV, Zip Download
  # --------------------------------------------------------
  /signatures/project/{claGroupID}/ccla/pdfs:
    get:
      summary: Downloads all corporate CLAs for this project
      description: Downloads the corporate CLAs for this project
      operationId: downloadProjectSignatureCCLAs
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - application/json
      responses:
        '200':
          description: 'The CLA Group CCLAs as a zip'
          schema:
            $ref: '#/definitions/url-object'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/ccla/csv:
    get:
      summary: Downloads all coporate CLA information as a CSV document for this project
      description: Downloads the corporate CLA information as a CSV document for this project
      operationId: downloadProjectSignatureCCLAAsCSV
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - text/csv
      responses:
        '200':
          description: 'The CLA Group corporate CLAs as a CSV file'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/ccla/{signatureID}/pdf:
    get:
      summary: Downloads the corporate CLA for this project
      description: Downloads the corporate CLA for this project
      operationId: downloadProjectSignatureCorporateCLA
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-signatureID"
      produces:
        - application/pdf
      responses:
        '200':
          description: 'The corporate CLA as a PDF document'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  # --------------------------------------------------------
  # Employee CLA Endpoints - CSV Report Download
  # --------------------------------------------------------
  /signatures/project/{claGroupID}/company/{companySFID}/employee/csv:
    get:
      summary: Downloads all employee CLA information as a CSV document for this project
      description: Downloads the employee CLA information as a CSV document for this project
      operationId: downloadProjectSignatureEmployeeAsCSV
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-companySFID"
      produces:
        - text/json
        - text/csv
      responses:
        '200':
          description: "The CLA Group employee CLA's as a CSV file"
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{projectSFID}/company/{companySFID}:
    get:
      summary: Get project company ccla signatures
      description: Returns a list of ccla signature models when provided the project ID and company ID
      operationId: getProjectCompanySignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companySFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/company/{companyID}:
    get:
      summary: Get company signatures
      description: Returns a list of company signatures when provided the company ID
      operationId: getCompanySignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/signatureType'
        - name: companyID
          description: the company ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/user/{userID}:
    get:
      summary: Get user signatures
      description: Returns a list of user signatures when provided the user ID
      operationId: getUserSignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: userID
          description: the user ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/userName'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{projectID}/company/{companyID}/employee:
    get:
      summary: Get project company signatures for the employees
      description: Returns a list of employee project signature models when provided the project ID and company ID
      operationId: getProjectCompanyEmployeeSignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectID
          description: the project ID
          in: path
          type: string
          required: true
        - name: companyID
          description: the company ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{projectSFID}/company/{companySFID}/clagroup/{claGroupID}/approval-list:
    put:
      summary: Updates the Project / Organization/Company Approval list
      description: API to update the project and organization/company approval list.
      operationId: updateApprovalList
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companySFID"
        - name: claGroupID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/approval-list'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signature'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /notify-cla-managers:
    post:
      summary: Send Notification to CLA Managaers
      description: Send Notification to selected list of CLA Managers
      security: []
      operationId: notifyCLAManagers
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notify-cla-manager-list'
          required: true
      responses:
        '204':
          description: 'Success'
        '404':
          $ref: '#/responses/not-found'
        '400':
          $ref: '#/responses/invalid-request'
      tags:
        - cla-manager

  /user/{userID}/invite-company-admin:
    post:
      summary: Invite Manager
      description: Invite Company Admin based on user request to sign CLA
      security: []
      operationId: inviteCompanyAdmin
      parameters:
        - $ref: "#/parameters/path-userID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager Designee
            properties:
              contactAdmin:
                description: flag checking whether to contact company admin
                type: boolean
              companyID:
                description: EasyCLA companyID of contributor inviting CLA Manager
                type: string
              claGroupID:
                description: claGroupID to be signed
                type: string
              userEmail:
                $ref: './common/properties/email.yaml'
                description: Proposed CLA Manager email
              name:
                type: string
                description: Proposed CLA Manager name
                example: "Harold Wanyama"
                pattern: "^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$"
                minLength: 1
                maxLength: 60
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-manager-designees'
        '204':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /company/{companySFID}/project/{projectSFID}/cla-manager/requests:
    post:
      summary: Adds a CLA Manager Designee to the specified Company and Project
      description: User proposes a CLA Manager making the proposed user CLA Manager Designee
      operationId: createCLAManagerRequest
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager Designee User
            description: User object used for CLA Manager requests
            properties:
              fullName:
                type: string
                pattern: '^(\w+( +\w+)*)$'
                minLength: 1
                maxLength: 60
              userEmail:
                $ref: './common/properties/email.yaml'
                description: CLA Manager Designee email
              contactAdmin:
                type: boolean
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: "#/definitions/cla-manager-designee"
        '204':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager


  /company/{companySFID}/project/{projectSFID}/cla-manager:
    post:
      summary: Adds a new CLA Manager to the specified Company and Project
      description: Allows an existing CLA Manager to add another CLA Manager to the specified Company and Project.
      operationId: createCLAManager
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companySFID"
        - name: body
          in: body
          schema:
            $ref: '#/definitions/cla-manager-user'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-cla-manager'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-manager

  /company/{companySFID}/contributorAssociation:
    post:
      summary: Associates a contributor with a company
      description: Associates a contributor with a company
      security: []
      operationId: contributorAssociation
      parameters:
        - $ref: "#/parameters/path-companySFID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: Contributor
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: LfEmail for contributor getting associated

      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/contributor'
        '400':
          $ref: '#/responses/invalid-request'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - company

  /company/{companySFID}/claGroup/{claGroupID}/contributorAssociation:
    post:
      summary: Associates a contributor with a company and Project
      description: Associates a contributor with a company and Project
      security: []
      operationId: contributorRoleScopAssociation
      parameters:
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-claGroupID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: Contributor
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: LfEmail for contributor getting associated

      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/contributors'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - company

  /company/{companySFID}/project/{projectSFID}/cla-manager/{userLFID}:
    delete:
      summary: Removes the CLA Manager from ACL for specified Company and Project
      description: Allows an existing CLA Manager to remove another CLA Manager from the specified Company and Project.
      operationId: deleteCLAManager
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-userLFID"
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /company/{companySFID}/claGroup/{claGroupID}/cla-manager-designee:
    post:
      summary: Assigns CLA Manager designee
      description: Assigns CLA Manager designee to a given user
      operationId: createCLAManagerDesigneeByGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-companySFID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager Designee
            description: User object used for CLA Manager designee
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: 'CLA Manager designee email address'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-manager-designees'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /company/{companySFID}/project/{projectSFID}/cla-manager-designee:
    post:
      summary: Assigns CLA Manager designee
      description: Assigns CLA Manager designee to a given user
      operationId: createCLAManagerDesignee
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companySFID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager designee
            description: User object used for CLA Manager designee
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: 'CLA Manager designee email address'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/cla-manager-designee'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /signatures/{signatureID}/gh-org-whitelist:
    get:
      summary: Signature Update
      description: Updates the specified signature GitHub Organization approval list
      operationId: getGitHubOrgWhitelist
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures
    delete:
      summary: Signature Delete
      description: Deletes the specified signature GitHub organization approval list
      operationId: deleteGitHubOrgWhitelist
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/gh-org-whitelist'
      responses:
        '204':
          description: 'Resource Deleted'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures
    post:
      summary: Signature Update
      description: Updates the specified signature GitHub organization approval list
      operationId: addGitHubOrgWhitelist
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/gh-org-whitelist'
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /gerrit/repos:
    get:
      summary: Get Gerrit Repositories
      description: Returns a list of repositories under the specified gerrit instance
      operationId: getGerritRepos
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/gerritHost"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/gerrit-repo-list'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits

  /cla-group/{claGroupID}/project/{projectSFID}/gerrits/{gerritID}:
    delete:
      summary: Delete the gerrit
      description: Delete the gerrit instance for the project
      operationId: deleteGerrit
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-claGroupID"
        - name: gerritID
          in: path
          type: string
          required: true
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits

  /cla-group/{claGroupID}/project/{projectSFID}/gerrits:
    get:
      summary: Get the gerrits for project and cla-group
      description: Get the gerrit instance list for the project and cla-group
      operationId: ListGerrits
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/gerrit-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits
    post:
      summary: Add the gerrit
      description: Adds the gerrit instance for the project
      operationId: addGerrit
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-projectSFID"
        - in: body
          name: add-gerrit-input
          schema:
            $ref: '#/definitions/add-gerrit-input'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/gerrit'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits

  /company/name/{companyName}:
    get:
      summary: gets the company by name
      description: Returns the matching company by name
      operationId: getCompanyByName
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companyName'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/id/{companyID}:
    delete:
      summary: deletes the company by ID
      description: Deletes the company by ID
      operationId: deleteCompanyByID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companyID'
      produces:
        - application/json
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/sfid/{companySFID}:
    delete:
      summary: deletes the company by the SFID
      description: Deletes the company by the SFID
      operationId: deleteCompanyBySFID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companySFID'
      produces:
        - application/json
      responses:
        '204':
          description: 'Resource Deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/{companySFID}/project/{projectSFID}/cla-managers:
    get:
      summary: get CLA manager of company for particular project/foundation
      description: Returns list CLA managers of the company for project/foundation
      operationId: getCompanyProjectClaManagers
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-cla-managers'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companyID}/cla-group/{claGroupID}/cla-managers:
    get:
      summary: Get list of CLA managers based on the CLA Group and v1 Company ID
      description: Returns a list of current CLA managers based on the CLA Group ID and the v1 Company ID
      operationId: getCompanyCLAGroupManagers
      security: []
      parameters:
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-claGroupID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-cla-managers'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companySFID}/project/{projectSFID}/active-cla-list:
    get:
      summary: get active CLA list of company for particular project/foundation
      description: Returns list active CLA of the company under particular project/foundation
      operationId: getCompanyProjectActiveCla
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/active-cla-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company
  /company/{companySFID}/project/{projectSFID}/contributors:
    get:
      summary: get corporate contributors for project
      description: Returns list of corporate contributors for project
      operationId: getCompanyProjectContributors
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/searchTerm"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/corporate-contributor-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company
  
  /company/{companySFID}/admin:
    get:
      summary: Returns a list of Company Admins (salesforce)
      operationId: getCompanyAdmins
      security: []
      parameters:
        - $ref: "#/parameters/path-companySFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-admin-list'
        '400':
          $ref: '#/responses/invalid-request'
      tags:
        - company

  /company/{companySFID}/project/{projectSFID}/cla:
    get:
      summary: Returns the CLA Groups associated with the Project and Company
      operationId: getCompanyProjectCla
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-project-cla-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /user/{userID}/company:
    post:
      summary: API that creates a salesforce company
      description: Creates a Company for an individual contributor that fails to get a company during the signing getProjectSignatures
      security: []
      operationId: createCompany
      parameters:
        - $ref: "#/parameters/path-userID"
        - name: input
          in: body
          schema:
            $ref: '#/definitions/company-input'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-output'
        '400':
          $ref: '#/responses/invalid-request'
        '409':
          $ref: '#/responses/conflict'
        '422':
          $ref: '#/responses/unprocessable-entity'
      tags:
        - company

  /request-corporate-signature:
    post:
      summary: api generates the corporate signature which is ready to sign
      description: Creates a new signature given project and company IDs. The manager will be redirected to the
        return_url once signature is complete.
      operationId: requestCorporateSignature
      parameters:
        - $ref: "#/parameters/authorization"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: input
          in: body
          schema:
            $ref: '#/definitions/corporate-signature-input'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/corporate-signature-output'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - sign

responses:
  unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/error-response'
  invalid-request:
    description: Invalid request
    schema:
      $ref: '#/definitions/error-response'
  forbidden:
    description: Insufficient privilege to execute action
    schema:
      $ref: '#/definitions/error-response'
  not-found:
    description: Not found
    schema:
      $ref: '#/definitions/error-response'
  internal-server-error:
    description: Internal server error
    schema:
      $ref: '#/definitions/error-response'
  conflict:
    description: Duplicate Resource
    schema:
      $ref: '#/definitions/error-response'
  unprocessable-entity:
    description: Unprocessable Entity - Validation Failure
    schema:
      $ref: '#/definitions/error-response'

# Common parameters
parameters:
  pageSize:
    name: pageSize
    description: The maximum number of results per page, value must be a positive integer value
    in: query
    type: integer
    required: false
    minimum: 0
    exclusiveMinimum: true
  returnAllEvents:
    name: returnAllEvents
    description: The optional parameter which would avoid pagination and it will return all data
    in: query
    type: boolean
    required: false
  searchField:
    name: searchField
    description: The optional user name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  searchTerm:
    name: searchTerm
    description: The optional search filter
    in: query
    type: string
    required: false
  fullMatch:
    name: fullMatch
    in: query
    type: boolean
    default: false
    required: false
  nextKey:
    name: nextKey
    description: The next key to scan - used as a page offset for scanning batches of records
    in: query
    type: string
    required: false
    # UUID v4 regex
    # pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'
  companyName:
    name: companyName
    description: The optional company name filter
    in: query
    type: string
    required: false
    pattern: '^([\w\d\s\-\,\./]+){2,255}$'
  userName:
    name: userName
    description: The optional user name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  signatureType:
    name: signatureType
    in: query
    type: string
    required: false
    enum: [ccla,cla]
  claType:
    name: claType
    description: >
      CLA Type query parameter - allows the caller to specify either individual, employee or corporate signature, valid options:
      * `icla` - for individual contributor signature records (individuals not associated with a corporation)
      * `ecla` - for employee contributor signature records (acknowledgements from corporate contributors)
      * `ccla` - for corporate contributor signature records (created by CLA Signatories and managed by CLA Managers)
    in: query
    type: string
    required: false
    enum: [icla,ecla,ccla]
  templateCLAType:
    name: claType
    in: query
    type: string
    required: true
    enum: [icla, ccla]
  foundationSFID:
    name: foundationSFID
    description: the Salesforce ID of the Foundation
    in: query
    type: string
  path-claGroupID:
    name: claGroupID
    description: ID of the CLA Group
    in: path
    type: string
    required: true
  path-foundationSFID:
    name: foundationSFID
    description: the Salesforce ID of the Foundation
    in: path
    type: string
    required: true
  path-projectSFID:
    name: projectSFID
    description: the Salesforce ID of the project
    in: path
    type: string
    required: true
  path-userID:
    name: userID
    description: v1 EasyCLA user Admin ID
    in: path
    type: string
    required: true
  path-userLFID:
    name: userLFID
    description: LFID of the user
    in: path
    type: string
    required: true
  path-companyID:
    name: companyID
    description: id of the company
    in: path
    type: string
    required: true
  path-companySFID:
    name: companySFID
    description: salesforce id of the company
    in: path
    type: string
    required: true
  path-companyName:
    name: companyName
    description: the company name
    in: path
    type: string
    required: true
    pattern: '^([\w\d\s\-\,\./]+){2,255}$'
  path-signatureID:
    name: signatureID
    description: id of the CLA signature
    in: path
    type: string
    required: true
  companySFID:
    name: companySFID
    description: salesforce id of the company
    in: query
    type: string
  gerritHost:
    name: gerritHost
    description: host of the gerrit server
    in: query
    type: string
    # Valid hostname
    format: hostname
    minLength: 3
    maxLength: 255
  x-acl:
    name: X-ACL
    description: The access control list header value encoded as base64 - assigned by the API Gateway based on user/request permissions
    in: header
    type: string
    required: true
    x-example: 'JImlzQWRtaW4iOiB0cnVlLAoJImFsbG93ZWQiOiB0cnVlLAoJImNvbnRleHQiOic3lzdGVtIgp9Cg=='
  authorization:
    name: Authorization
    description: Bearer token
    in: header
    type: string
    required: true
  x-username:
    name: X-USERNAME
    description: The username/LFID value - assigned/set by the API Gateway based on login credentials
    in: header
    type: string
    x-example: 'zachking123'
  x-email:
    name: X-EMAIL
    description: The email value - assigned/set by the API Gateway based on login credentials
    in: header
    type: string
    x-example: 'user@linuxfoundation.org'
  x-request-id:
    name: X-REQUEST-ID
    description: The unique request ID value - assigned/set by the API Gateway based on the login session
    in: header
    type: string

definitions:
  # Common definitions

  version:
    $ref: './common/version.yaml'

  health:
    $ref: './common/health.yaml'

  health-status:
    $ref: './common/health-status.yaml'

  event-list:
    $ref: './common/event-list.yaml'

  event:
    $ref: './common/event.yaml'

  github-repository-input:
    type: object
    required:
      - repository_github_id
      - github_organization_name
      - cla_group_id
    properties:
      repository_github_id:
        type: string
      github_organization_name:
        type: string
      cla_group_id:
        type: string

  github-repository:
    $ref: './common/github-repository.yaml'

  list-github-repositories:
    $ref: './common/list-github-repositories.yaml'

  projects:
    $ref: './common/projects.yaml'

  project:
    $ref: './common/project.yaml'

  template:
    $ref: './common/template.yaml'

  create-cla-group-template:
    $ref: './common/create-cla-group-template.yaml'

  template-pdfs:
    $ref: './common/template-pdfs.yaml'

  github-organizations:
    $ref: './common/github-organizations.yaml'

  github-organization:
    $ref: './common/github-organization.yaml'

  create-github-organization:
    $ref: './common/create-github-organization.yaml'

  update-github-organization:
    $ref: './common/update-github-organization.yaml'

  user:
    $ref: './common/user.yaml'

  signatures:
    $ref: './common/signatures.yaml'

  signature:
    $ref: './common/signature.yaml'

  icla-signatures:
    $ref: './common/icla-signatures.yaml'

  icla-signature:
    $ref: './common/icla-signature.yaml'

  approval-list:
    $ref: './common/signature-approval-list.yaml'

  github-org:
    $ref: './common/github-org.yaml'

  gh-org-whitelist:
    $ref: './common/gh-org-whitelist.yaml'

  add-gerrit-input:
    $ref: './common/add-gerrit-input.yaml'

  gerrit-repo:
    $ref: './common/gerrit-repo.yaml'

  gerrit-repo-list:
    $ref: './common/gerrit-repo-list.yaml'

  gerrit:
    $ref: './common/gerrit.yaml'

  gerrit-list:
    $ref: './common/gerrit-list.yaml'

  github-repositories-group-by-orgs:
    $ref: './common/github-repositories-group-by-orgs.yaml'

  project-document:
    $ref: './common/project-document.yaml'

  meta-field:
    $ref: './common/meta-field.yaml'

  field:
    $ref: './common/field.yaml'

  github-repository-info:
    $ref: './common/github-repository-info.yaml'

  #company:
  #  $ref: './common/company.yaml'

  total-count-metrics:
    type: object
    properties:
      corporateContributorsCount:
        type: integer
        x-omitempty: false
      individualContributorsCount:
        type: integer
        x-omitempty: false
      claManagersCount:
        type: integer
        x-omitempty: false
      contributorsCount:
        type: integer
        x-omitempty: false
      projectsCount:
        type: integer
        x-omitempty: false
      companiesCount:
        type: integer
        x-omitempty: false
      repositoriesCount:
        type: integer
        x-omitempty: false
      githubRepositoriesCount:
        type: integer
        x-omitempty: false
      gerritRepositoriesCount:
        type: integer
        x-omitempty: false
      companiesProjectContributionCount:
        type: integer
        x-omitempty: false
      lfMembersCLACount:
        type: integer
        x-omitempty: false
      nonLfMembersCLACount:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: CLA total metrics

  top-companies:
    type: object
    properties:
      topCompaniesByProjectCount:
        type: array
        items:
          $ref: '#/definitions/company-metric'
      topCompaniesByCorporateContributors:
        type: array
        items:
          $ref: '#/definitions/company-metric'
      topCompaniesByClaManagers:
        type: array
        items:
          $ref: '#/definitions/company-metric'
      averageCompanyProjectCount:
        type: integer
        x-omitempty: false
      averageCompanyCorporateContributors:
        type: integer
        x-omitempty: false
      averageCompanyClaManagers:
        type: integer
        x-omitempty: false

  top-projects:
    type: object
    properties:
      topProjectsByIcla:
        type: array
        items:
          $ref: '#/definitions/project-metric'
      topProjectsByCcla:
        type: array
        items:
          $ref: '#/definitions/project-metric'
      topProjectsByIclaAndCcla:
        type: array
        items:
          $ref: '#/definitions/project-metric'

  company-metric:
    type: object
    properties:
      id:
        type: string
      companyName:
        $ref: './common/properties/company-name.yaml'
      claManagersCount:
        type: integer
        x-omitempty: false
      corporateContributorsCount:
        type: integer
        x-omitempty: false
      projectsCount:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: Company metrics

  company-input:
    type: object
    required:
      - userEmail
      - companyName
      - companyWebsite
    properties:
      companyName:
        $ref: './common/properties/company-name.yaml'
      companyWebsite:
        $ref: './common/properties/website.yaml'
        description: the company website
      userEmail:
        $ref: './common/properties/email.yaml'

  company-output:
    type: object
    properties:
      companyName:
        $ref: './common/properties/company-name.yaml'
      companyWebsite:
        type: string
      logoURL:
        type: string
      companyID:
        type: string

  cla-manager-distribution:
    type: object
    properties:
      oneClaManager:
        type: integer
        x-omitempty: false
      twoClaManagers:
        type: integer
        x-omitempty: false
      threeClaManagers:
        type: integer
        x-omitempty: false
      fourOrMoreClaManagers:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: CLA manager distribution across companies

  list-project-metric:
    type: object
    properties:
      nextKey:
        type: string
      list:
        type: array
        items:
          $ref: '#/definitions/sf-project-metric'

  company-project-metrics:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/company-project-metric'

  company-project-metric:
    type: object
    properties:
      companyID:
        type: string
        x-omitempty: false
      projectID:
        type: string
        x-omitempty: false
      claManagersCount:
        type: integer
        x-omitempty: false
      contributorsCount:
        type: integer
        x-omitempty: false
      projectName:
        $ref: './common/properties/project-name.yaml'
        x-omitempty: false
      claGroupName:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      companyName:
        $ref: './common/properties/company-name.yaml'
        x-omitempty: false
      projectSFID:
        type: string
        x-omitempty: false

  sf-project-metric:
    type: object
    properties:
      projectExternalId:
        type: string
      list:
        type: array
        items:
          $ref: '#/definitions/project-metric'

  project-metric:
    type: object
    properties:
      id:
        type: string
      externalProjectID:
        type: string
      projectName:
        $ref: './common/properties/project-name.yaml'
      companiesCount:
        type: integer
        x-omitempty: false
      claManagersCount:
        type: integer
        x-omitempty: false
      corporateContributorsCount:
        type: integer
        x-omitempty: false
      individualContributorsCount:
        type: integer
        x-omitempty: false
      totalContributorsCount:
        type: integer
        x-omitempty: false
      repositoriesCount:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: project metrics

  company:
    $ref: './common/company.yaml'

  company-cla-managers:
    type: object
    title: Company CLA Managers
    description: List of CLA Managers for the company
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/company-cla-manager'

  cla-manager-designees:
    type: object
    title: cla manager designees
    description: List of cla manager designee roles for a user
    properties:
      list:
        type: array
        items:
          $ref:
            '#/definitions/cla-manager-designee'
  
  contributors:
    type: object
    title: contributors
    description: List of contributor roles for a user
    properties:
      list:
        type: array
        items:
          $ref:
            '#/definitions/contributor'

  contributor:
    type: object
    title: Contributor
    description: Contributor association with an org
    properties:
      lf_username:
        type: string
        description: 'the LF username'
        x-omitempty: false
        example: 'john.doe'
      user_sfid:
        type: string
        description: 'the user SalesForce ID'
        x-omitempty: false
      email:
        $ref: './common/properties/email.yaml'
        x-omitempty: false
      assigned_on:
        type: string
        x-omitempty: false
      company_sfid:
        type: string
        description: 'the Organization SalesForce ID'
        x-omitempty: false
        example: 'abc134234adsdf43'
      role:
        type: string
        description: 'The role association with company'
        example: 'contributor'
        x-omitempty: false

  cla-manager-designee:
    type: object
    title: Company CLA Designee
    description: CLA Manager Designee details
    properties:
      lf_username:
        type: string
        description: 'the LF username'
        x-omitempty: false
        example: 'john.doe'
      name:
        type: string
        description: 'name of the user'
        example: 'john'
        x-omitempty: false
      user_sfid:
        type: string
        description: 'the user SalesForce ID'
        x-omitempty: false
      email:
        $ref: './common/properties/email.yaml'
        x-omitempty: false
      type:
        type: string
        x-omitempty: false
        example: 'contact'
      assigned_on:
        type: string
        x-omitempty: false
      company_sfid:
        type: string
        description: 'the Organization SalesForce ID'
        x-omitempty: false
        example: 'abc134234adsdf43'
      project_sfid:
        type: string
        description: 'the project SalesForce ID'
        x-omitempty: false
        example: 'a2g17000000hyxNAAA'
      project_name:
        type: string
        description: 'name of the salesforce project'
        example: 'Appium'
        x-omitempty: false

  company-cla-manager:
    type: object
    title: Company CLA Manager
    description: CLA Managers details
    properties:
      lf_username:
        type: string
        description: "The CLA Manager's LF username"
        x-omitempty: false
        example: 'john.doe'
      name:
        type: string
        description: "The CLA Manager's name"
        x-omitempty: false
        example: 'John Doe'
      user_sfid:
        type: string
        description: "The CLA Manager's user Salesforce ID"
        x-omitempty: false
      email:
        $ref: './common/properties/email.yaml'
        x-omitempty: false
      approved_on:
        type: string
        x-omitempty: false
      project_id:
        type: string
        description: "The Project ID"
        x-omitempty: false
        example: "e1e30240-a722-4c82-a648-121681d959c7"
      project_sfid:
        type: string
        description: "The Project SalesForce ID"
        x-omitempty: false
        example: "a2g17000000hyxNAAA"
      project_name:
        type: string
        description: "The name of the SalesForce project"
        example: "Appium"
        x-omitempty: false
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
      organization_name:
        type: string
        description: "The name of Salesforce organization"
        x-omitempty: false
        example: "Intel Corporation"
      organization_sfid:
        type: string
        x-omitempty: false
        example: "00117000015vpjXAAQ"

  cla-manager-user:
    type: object
    required:
      - firstName
      - lastName
      - userEmail
    x-nullable: false
    title: CLA Manager User
    description: User object used for CLA Manager requests
    properties:
      firstName:
        type: string
      lastName:
        type: string
      userEmail:
        $ref: './common/properties/email.yaml'
        description: 'CLA Manager Email'

  enabled-cla-list:
    type: object
    title: Enabled CLA list
    description: List of CLA enabled projects for a specified Foundation
    properties:
      foundationLevelCLA:
        description: Flag indicating whether CLA is signed at Foundation level (true) or Project level (false)
        type: boolean
        x-omitempty: false
      list:
        type: array
        items:
          $ref: '#/definitions/enabled-cla'

  enabled-cla:
    type: object
    title: Project that is CLA enabled
    description: A project description of which is CLA enabled
    properties:
      project_name:
        type: string
        description: the Project Name
        example: "Appium"
        x-omitempty: false
      foundation_sfid:
        type: string
        description: the Project Group (previously Foundation) SFID
        example: "d9f17888888hyxsx4u"
        x-omitempty: false
      project_sfid:
        type: string
        description: the Project SFID
        example: "a2g17000000hyxNABB"
        x-omitempty: false
      project_type:
        type: string
        example: "Project"
        x-omitempty: false
      project_logo:
        type: string
        example: "http://wwwlinuxfoundation.org/logo.gif"
        x-omitempty: false
      ccla_enabled:
        type: boolean
        description: flag to indicate if corporate CLAs are enabled
        default: false
        x-omitempty: false
      icla_enabled:
        type: boolean
        description: flag to indicate if individual CLAs are enabled
        default: false
        x-omitempty: false
      ccla_requires_icla:
        type: boolean
        description: flag to indicate if individual ICLAs should be signed with corporate CLAs are signed
        default: false
        x-omitempty: false

  active-cla-list:
    type: object
    title: Active cla list of the companies
    description: details of the companies active cla
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/active-cla'

  notify-cla-manager-list:
    type: object
    title: Cla Manager list and contributor userID for given company and Project
    description: list of CLA Manager emails and contributor userID
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/notify-cla-manager'
      userID:
        type: string
      companyName:
        $ref: './common/properties/company-name.yaml'
      claGroupName:
        $ref: './common/properties/cla-group-name.yaml'

  notify-cla-manager:
    type: object
    properties:
      email:
        $ref: './common/properties/email.yaml'
        description: CLA Manager email
      name:
        type: string

  company-project-cla-list:
    type: object
    properties:
      signed_cla_list:
        type: array
        items:
          $ref: '#/definitions/active-cla'
      unsigned_project_list:
        type: array
        items:
          $ref: '#/definitions/unsigned_project'
  
  company-admin-list:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/admin_sf'
  
  admin_sf:
    type: object
    title: salesforce company admin
    description: salesforce company admin
    properties:
      id:
        type: string
        x-omitempty: false
      username:
        type: string
        x-omitempty: false
      email:
        type: string
        x-omitempty: false
      
  
  unsigned_project:
    type: object
    title: unsigned project
    description: details of unsigned project
    properties:
      cla_group_id:
        type: string
        x-omitempty: false
        example: "e1e30240-a722-4c82-a648-121681d959c7"
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      project_sfid:
        type: string
        x-omitempty: false
        example: "a2g17000000hyxNAAA"
      project_name:
        type: string
        x-omitempty: false
        example: "Appium"
      ccla_enabled:
        type: boolean
        x-omitempty: false
      icla_enabled:
        type: boolean
        x-omitempty: false
      can_sign:
        type: boolean
        x-omitempty: false
        description: if requesting user is cla-designee then this would be true
      sub_projects:
        type: array
        items:
          type: string

  active-cla:
    type: object
    title: Active CLA of the company
    description: Details of the active CLA Group
    properties:
      signed_on:
        type: string
        x-omitempty: false
        example: "2019-07-18T11:38:13.144674+0000"
      project_id:
        type: string
        description: The CLA Group/Project ID
        x-omitempty: false
        example: "e1e30240-a722-4c82-a648-121681d959c7"
      project_sfid:
        type: string
        description: The project SalesForce ID
        x-omitempty: false
        example: "a2g17000000hyxNAAA"
      project_name:
        type: string
        description: The project name
        example: "Appium"
        x-omitempty: false
      project_type:
        type: string
        description: "The project type, typically either 'Project Group' (formerly Foundation) or 'Project'"
        example: "Project Group"
        x-omitempty: false
      sub_projects:
        type: array
        description: "The list of sub-projects"
        items:
          type: string
      signatory_name:
        type: string
        example: "John Doe"
        x-omitempty: false
      signature_id:
        type: string
        example: "55ec4162-9e41-47da-a643-f81666953a51"
        x-omitempty: false
      project_logo:
        type: string
        example: "http://wwwlinuxfoundation.org/logo.gif"
        x-omitempty: false
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      ccla_url:
        type: string
        x-omitempty: false

  corporate-contributor-list:
    $ref: './common/corporate-contributors-list.yaml'

  corporate-contributor:
    $ref: './common/corporate-contributor.yaml'

  corporate-signature-input:
    type: object
    required:
      - project_sfid
      - company_sfid
    properties:
      project_sfid:
        type: string
        example: 'a0941000005ouJFAAY'
        description: salesforce id of the project
      company_sfid:
        type: string
        example: '0014100000Te0fMAAR'
        description: salesforce id of the company
      send_as_email:
        type: boolean
        example: false
        description: send signing request as email. This should be set to true when requestor is not signatory.
      authority_name:
        type: string
        example: 'John Doe'
        description: name of the cla signatory
        pattern: "^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$"
      authority_email:
        $ref: './common/properties/email.yaml'
        description: Email of the CLA Signatory
      return_url:
        type: string
        example: 'https://corporate.dev.lfcla.com/#/company/eb4d7d71-693f-4047-bf8d-10d0e7764969'
        description: on signing the document, page will get redirected to this url. This is valid only when send_as_email is false
        format: uri

  corporate-signature-output:
    type: object
    properties:
      signature_id:
        type: string
        description: id of the signature
      sign_url:
        type: string
        description: signing url

  signed_document:
    type: object
    properties:
      signature_id:
        type: string
        description: id of the signature
      signed_cla_url:
        type: string
        description: pdf url of the signed agreement

  create-cla-group-input:
    type: object
    required:
      - cla_group_name
      - ccla_enabled
      - ccla_requires_icla
      - icla_enabled
      - foundation_sfid
      - template_fields
    properties:
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
      cla_group_description:
        $ref: './common/properties/cla-group-description.yaml'
      ccla_enabled:
        type: boolean
        example: true
        description: flag to indicate if ccla is enabled
      ccla_requires_icla:
        type: boolean
        example: true
        description: flag to indicate if corporate contributors requires to sign icla
      icla_enabled:
        type: boolean
        example: true
        description: flag to indicate if icla is enabled
      foundation_sfid:
        type: string
        example: 'a09410000182dD2AAI'
        description: foundation sfid under which this cla group is created
      project_sfid_list:
        description: list of projects under foundation for which this cla group is created
        type: array
        items:
          type: string
          example: 'a092M00001IV3znQAD'
      template_fields:
        description: template variables using which icla/ccla template will be created
        $ref: '#/definitions/create-cla-group-template'

  cla-group-list:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/cla-group'

  cla-group:
    type: object
    properties:
      foundationLevelCLA:
        description: Flag indicating whether CLA is signed at Foundation level (true) or Project level (false)
        type: boolean
        x-omitempty: false
      cla_group_id:
        type: string
        example: 'b1e86e26-d8c8-4fd8-9f8d-5c723d5dac9f'
        description: id of the CLA group
        x-omitempty: false
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      cla_group_description:
        $ref: './common/properties/cla-group-description.yaml'
        x-omitempty: false
      ccla_enabled:
        type: boolean
        example: true
        description: flag to indicate if CCLA is enabled
        x-omitempty: false
      ccla_requires_icla:
        type: boolean
        example: true
        description: flag to indicate if corporate contributors requires to sign ICLA
        x-omitempty: false
      icla_enabled:
        type: boolean
        example: true
        description: flag to indicate if ICLA is enabled
        x-omitempty: false
      foundation_sfid:
        type: string
        example: 'a09410000182dD2AAI'
        description: foundation sfid under which this CLA group is created
        x-omitempty: false
      root_project_repositories_count:
        type: integer
        description: number of repositories added to this CLA Group from root project
        x-omitempty: false
      foundation_name:
        type: string
        example: 'Academy Software Foundation'
        description: foundation name under which this CLA group is created
        x-omitempty: false
      repositories_count:
        type: integer
        description: total repositories under this cla-group
        x-omitempty: false
      total_signatures:
        type: integer
        description: aggregate count of ICLA and CCLA contributors within this CLA Group
        x-omitempty: false
      project_list:
        x-omitempty: false
        description: list of projects under foundation for which this CLA group is created
        type: array
        items:
          $ref: '#/definitions/cla-group-project'
      icla_pdf_url:
        description: template URL for ICLA document
        type: string
        example: 'https://cla-signature-files-dev.s3.amazonaws.com/contract-group/b1e86e26-d8c8-4fd8-9f8d-5c723d5dac9f/template/icla.pdf'
        x-omitempty: false
      ccla_pdf_url:
        description: template URL for CCLA document
        type: string
        example: 'https://cla-signature-files-dev.s3.amazonaws.com/contract-group/b1e86e26-d8c8-4fd8-9f8d-5c723d5dac9f/template/ccla.pdf'
        x-omitempty: false

  cla-group-project:
    type: object
    properties:
      project_sfid:
        type: string
        description: salesforce id of the project in cla-group
        example: 'a092M00001IV3znQAD'
        x-omitempty: false
      project_name:
        type: string
        description: salesforce name of the project in cla-group
        example: 'Academy Software Foundation'
        x-omitempty: false
      repositories_count:
        description: repositories added from this project into cla-group
        type: integer
        x-omitempty: false

  cla-group-validation-request:
    type: object
    properties:
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: true
        x-nullable: true
      cla_group_description:
        $ref: './common/properties/cla-group-description.yaml'
        x-omitempty: true
        x-nullable: true

  cla-group-validation-response:
    type: object
    properties:
      valid:
        type: boolean
        example: true
        description: returns true if the CLA Group validates, false otherwise
        x-omitempty: false
      validation_errors:
        x-omitempty: true
        description: list of CLA Group validation errors
        type: array
        items:
          type: string
          example: 'duplicate CLA Group name'

  foundation-mapping-list:
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/foundation-mapping'

  foundation-mapping:
    type: object
    properties:
      foundation_sfid:
        type: string
      cla_groups:
        type: array
        items:
          $ref: '#/definitions/cla-group-projects'

  cla-group-projects:
    type: object
    properties:
      cla_group_id:
        type: string
      project_sfid_list:
        type: array
        items:
          type: string

  project-github-organizations:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/project-github-organization'

  project-github-organization:
    type: object
    properties:
      auto_enabled:
        type: boolean
        description: Flag to indicate if auto-enabled flag should be enabled. Organizations with auto-enable turned on will automatically include any new repositories to the EasyCLA configuration.
        x-omitempty: false
      github_organization_name:
        type: string
        description: The GitHub Organization name
        example: "kubernetes"
        # Pattern aligns with UI and other platform services including Org Service
        # \w Any word character (alphanumeric & underscore), dashes, periods
        pattern: '^([\w\-\.]+){2,255}$'
        minLength: 2
        maxLength: 255
      connection_status:
        type: string
        enum:
          - connected
          - partial_connection
          - connection_failure
          - no_connection
      repositories:
        type: array
        items:
          $ref: '#/definitions/project-github-repository'

  project-github-repository:
    type: object
    properties:
      repository_id:
        type: string
        x-omitempty: false
      repository_github_id:
        type: integer
      repository_name:
        type: string
        x-omitempty: false
      enabled:
        type: boolean
        x-omitempty: false
      connection_status:
        type: string
        enum:
          - connected
          - connection_failure

  url-object:
    type: object
    properties:
      url:
        type: string
        x-omitempty: false

  error-response:
    type: object
    x-nullable: false
    title: Error Response
    description: Standard error format
    properties:
      Code:
        description: The error code
        example: "404"
        type: string
      Message:
        description: The error message
        example: "unable to find project Acme, Inc."
        type: string
